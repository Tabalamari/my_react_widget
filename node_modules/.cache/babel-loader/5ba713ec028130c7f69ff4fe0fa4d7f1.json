{"ast":null,"code":"var _jsxFileName = \"/Users/tabalamari/Documents/Embedded widget/my-widget/src/components/StockQuote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport axiosInstance from './../index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MARKET_STACK_QUOTE_URL = `${process.env.REACT_APP_MARKETSTACK_BASE_URL}/intraday`;\nconst MARKET_STACK_TICKER_URL = `${process.env.REACT_APP_MARKETSTACK_BASE_URL}/tickers`;\n\nfunction StockQuote(props) {\n  _s();\n\n  const [quote, setQuote] = useState({\n    price: '--',\n    var: '--',\n    time: '--'\n  });\n  const [stock, setStock] = useState({\n    stockExchange: 'N/A',\n    name: 'N/A'\n  });\n  useEffect(() => {\n    axiosInstance.get(MARKET_STACK_QUOTE_URL, {\n      params: {\n        access_key: process.env.REACT_APP_MARKETSTACK_ACCESS_KEY,\n        symbols: props.symbol,\n        interval: '15min',\n        date_from: moment().subtract(1, 'day').format('YYYY-MM-DD'),\n        date_to: moment().format('YYYY-MM-DD'),\n        limit: '1'\n      }\n    }).then(result => {\n      if (!result.data.data || result.data.data.length <= 0) {\n        return;\n      }\n\n      const lastQuote = result.data.data[0];\n      setQuote({\n        price: lastQuote.last,\n        var: Math.trunc(-(1 - lastQuote.last / lastQuote.open) * 10000) / 100,\n        time: moment(lastQuote.date).format('YYYY-MM-DD HH:mm')\n      });\n    });\n  });\n  useEffect(() => {\n    axiosInstance.get(`${MARKET_STACK_TICKER_URL}/${props.symbol}`, {\n      params: {\n        access_key: process.env.REACT_APP_MARKETSTACK_ACCESS_KEY\n      }\n    }).then(result => {\n      if (!result.data) {\n        return;\n      }\n\n      setStock({\n        stockExchange: result.data.stock_exchange.acronym,\n        name: result.data.name\n      });\n    });\n  });\n  const varColor = quote.var < 0 ? 'text-red-500' : 'text-green-500';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'quote rounded-lg shadow-md p-4 bg-gray-800',\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: 'quoteSymbol text-sm text-white font-bold',\n      children: props.symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: 'quoteSymbol text-2xs text-gray-400 ml-1',\n      children: stock.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: 'quoteSymbol text-2xs text-gray-400 ml-1',\n      children: [\"(\", stock.stockExchange, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'quote flex flex-row justify-between mt-1',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'quotePrice self-center text-2xl font-bold items-center text-white',\n        children: [\"$\", quote.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'flex flex-col text-right',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'quoteVar ' + varColor,\n          children: [quote.var, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'quoteTime text-right text-2xs text-gray-400',\n          children: quote.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StockQuote, \"7+fELszkX2xaUfBsPyukDuB+jlY=\");\n\n_c = StockQuote;\nexport default StockQuote;\n\nvar _c;\n\n$RefreshReg$(_c, \"StockQuote\");","map":{"version":3,"sources":["/Users/tabalamari/Documents/Embedded widget/my-widget/src/components/StockQuote.js"],"names":["React","useState","useEffect","moment","axiosInstance","MARKET_STACK_QUOTE_URL","process","env","REACT_APP_MARKETSTACK_BASE_URL","MARKET_STACK_TICKER_URL","StockQuote","props","quote","setQuote","price","var","time","stock","setStock","stockExchange","name","get","params","access_key","REACT_APP_MARKETSTACK_ACCESS_KEY","symbols","symbol","interval","date_from","subtract","format","date_to","limit","then","result","data","length","lastQuote","last","Math","trunc","open","date","stock_exchange","acronym","varColor"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport moment from 'moment';\nimport axiosInstance from './../index';\n\n\n\nconst MARKET_STACK_QUOTE_URL = `${process.env.REACT_APP_MARKETSTACK_BASE_URL}/intraday`;\nconst MARKET_STACK_TICKER_URL = `${process.env.REACT_APP_MARKETSTACK_BASE_URL}/tickers`;\n\nfunction StockQuote(props) {\n    const [quote, setQuote] = useState({\n        price: '--',\n        var: '--',\n        time: '--'\n    });\n    const [stock, setStock] = useState({\n        stockExchange: 'N/A',\n        name: 'N/A',\n    });\n\n    useEffect(() => {\n        axiosInstance.get(MARKET_STACK_QUOTE_URL, {\n            params: {\n                access_key: process.env.REACT_APP_MARKETSTACK_ACCESS_KEY,\n                symbols: props.symbol,\n                interval: '15min',\n                date_from: moment().subtract(1, 'day').format('YYYY-MM-DD'),\n                date_to: moment().format('YYYY-MM-DD'),\n                limit: '1',\n            }\n        }).then((result) => {\n            if (!result.data.data || result.data.data.length <= 0) {\n                return;\n            }\n            const lastQuote = result.data.data[0];\n            setQuote({\n                price: lastQuote.last,\n                var: Math.trunc(-(1 - (lastQuote.last/lastQuote.open)) * 10000) / 100,\n                time: moment(lastQuote.date).format('YYYY-MM-DD HH:mm'),\n            })\n        });\n    });\n\n    useEffect(() => {\n        axiosInstance.get(`${MARKET_STACK_TICKER_URL}/${props.symbol}`, {\n            params: {\n                access_key: process.env.REACT_APP_MARKETSTACK_ACCESS_KEY,\n            }\n        }).then((result) => {\n            if (!result.data) {\n                return;\n            }\n            setStock({\n                stockExchange: result.data.stock_exchange.acronym,\n                name: result.data.name,\n            })\n        });\n    });\n\n    const varColor = quote.var < 0 ? 'text-red-500' : 'text-green-500';\n\n    return (\n        <div className={'quote rounded-lg shadow-md p-4 bg-gray-800'}>\n            <span className={'quoteSymbol text-sm text-white font-bold'}>{props.symbol}</span>\n            <span className={'quoteSymbol text-2xs text-gray-400 ml-1'}>{stock.name}</span>\n            <span className={'quoteSymbol text-2xs text-gray-400 ml-1'}>({stock.stockExchange})</span>\n            <div className={'quote flex flex-row justify-between mt-1'}>\n                <div className={'quotePrice self-center text-2xl font-bold items-center text-white'}>${quote.price}</div>\n                <div className={'flex flex-col text-right'}>\n                    <div className={'quoteVar ' + varColor}>{quote.var}%</div>\n                    <div className={'quoteTime text-right text-2xs text-gray-400'}>{quote.time}</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default StockQuote;"]},"metadata":{},"sourceType":"module"}